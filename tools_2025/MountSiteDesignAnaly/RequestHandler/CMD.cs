

using System;
using Autodesk.Revit.DB;
using Autodesk.Revit.UI;
using Autodesk.Revit.Attributes;
using goa.Common;
using goa.Revit.DirectContext3D;
using PubFuncWt;
using Autodesk.Revit.DB.ExtensibleStorage;
using System.Linq;
using System.Windows.Interop;
using System.Reflection;
using System.Windows;
using System.IO;

namespace MountSiteDesignAnaly
{

    [TransactionAttribute(TransactionMode.Manual)]
    [RegenerationAttribute(RegenerationOption.Manual)]

    public class CMD : IExternalCommand
    {
        internal static Document Doc;

        internal static int PlotNum = 0;
        internal static int SubPlotNum = 0;

        public Result Execute(ExternalCommandData commandData, ref string message, ElementSet elements)
        {
            #region 与revit文档交互入口
            UIApplication uiapp = commandData.Application;
            #endregion

            // tmep
            Doc = uiapp.ActiveUIDocument.Document;

            try
            {
                // 外部加载dll文件
                string versionNum = uiapp.Application.VersionNumber;
                string assemblyPaht = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + @"\Autodesk\Revit\Addins\" + versionNum + @"\goa_tools\PubFuncWt.dll";//引用位置

                #region 调出操作窗口
                try
                {
                    Assembly.UnsafeLoadFrom(assemblyPaht);
                }
                catch
                {
                    try
                    {
                        byte[] assemblyBuffer = File.ReadAllBytes(assemblyPaht);
                        Assembly a = Assembly.Load(assemblyBuffer);
                    }
                    catch { }
                }

                //IntPtr intPtr = Autodesk.Windows.ComponentManager.ApplicationWindow;
                //WindowInteropHelper helper = new WindowInteropHelper(MainWindow.Instance);
                //helper.Owner = intPtr;

                // 调出操作窗口
                if (MainWindow.Instance.IsVisible == true)
                {
                    MainWindow.Instance.Activate();
                }
                else
                    MainWindow.Instance.Show();

                #endregion

                #region 初始化设置

                TransactionGroup transactionGroup = new TransactionGroup(Doc);
                transactionGroup.Start("地库功能初始化");

                // entity相关
                // initialize schema and ds 初始化创建 DataStorage，并在其中SetEntity
                AutoGeneratedElementMgr.Initialize(uiapp.ActiveUIDocument.Document);

                // DirectContext3D 相关
                GeometryDrawServersMgr.Init(uiapp);

                transactionGroup.Assimilate();
                #endregion
                return Result.Succeeded;
            }
            catch (Exception ex)
            {
                //if (Wpf_cursorPrompt.Instance.IsVisible == true)
                //{
                //    Wpf_cursorPrompt.Instance.timer.Stop();
                //    Wpf_cursorPrompt.Instance.Hide();
                //}
                message = ex.Message;
                return Result.Failed;
            }
        }// excute

    }//class
}//namespace
